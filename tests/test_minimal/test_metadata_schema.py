import unittest
from pathlib import Path

import jsonschema

from neuroconv.utils import load_dict_from_file
from neuroconv.utils.json_schema import validate_metadata


def test_metadata_schema():
    metadata_schema = load_dict_from_file(
        Path(__file__).parent.parent.parent / "src" / "neuroconv" / "schemas" / "metadata_schema.json"
    )

    metadata = dict(
        NWBFile=dict(
            session_start_time="2020-01-01T00:00:00",
            session_description="Auto-generated by neuroconv",
            identifier="1234",
        ),
        Ophys=dict(
            Devices=[
                dict(
                    name="ImagingDevice",
                ),
            ],
            Fluorescence=dict(
                name="Fluorescence",
                PlaneSegmentationChan1Plane0=dict(
                    raw=dict(name="RoiResponseSeriesChan1Plane0", description="raw fluorescence signal"),
                    deconvolved=dict(name="DeconvolvedChan1Plane0", description="deconvolved fluorescence signal"),
                    neuropil=dict(name="NeuropilChan1Plane0", description="neuropil fluorescence signal"),
                ),
                PlaneSegmentationChan1Plane1=dict(
                    raw=dict(name="RoiResponseSeriesChan1Plane0", description="raw fluorescence signal"),
                    deconvolved=dict(name="DeconvolvedChan1Plane0", description="deconvolved fluorescence signal"),
                    neuropil=dict(name="NeuropilChan1Plane0", description="neuropil fluorescence signal"),
                ),
            ),
            DfOverF=dict(
                name="DfOverF",
                PlaneSegmentationChan1Plane0=dict(
                    dff=dict(name="RoiResponseSeriesChan1Plane0", description="Array of df/F traces."),
                ),
                PlaneSegmentationChan1Plane1=dict(
                    dff=dict(name="RoiResponseSeriesChan1Plane0", description="Array of df/F traces."),
                ),
            ),
        ),
    )

    validate_metadata(metadata=metadata, schema=metadata_schema)
